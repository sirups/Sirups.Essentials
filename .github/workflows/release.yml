name: Release

on:
  push:
    tags:
      - "v*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore "/p:Version=${GITHUB_REF:11}.${GITHUB_RUN_NUMBER}"
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Pack
      run: dotnet pack --configuration Release --include-symbols --include-source --output out "/p:Version=${GITHUB_REF:11}.${GITHUB_RUN_NUMBER}"
    - name: Push
      run: dotnet nuget push ./out/Sirups.Essentials.Mvc.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_APIKEY}}
    - name: Normalize the artifact name.
      run: mv ./out/Sirups.Essentials.Mvc.${GITHUB_REF:11}.${GITHUB_RUN_NUMBER}.nupkg ./out/Sirups.Essentials.Mvc.nupkg
    - name: output info
      run: echo ${GITHUB_REF:11} && echo ${GITHUB_RUN_NUMBER} && echo ${GITHUB_SHA}
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{github.ref}}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Release ${{github.ref}}
        # Text describing the contents of the tag.
        #body:  # optional
        # Path to file with information about the tag.
        #body_path: # optional
        # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
        draft: true # optional
        # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
        #prerelease: # optional
        # Any branch or commit SHA the Git tag is created from, unused if the Git tag already exists. Default: SHA of current commit
        #commitish: ${GITHUB_SHA} # optional
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./out/Sirups.Essentials.Mvc.nupkg
        asset_name: Sirups.Essentials.Mvc.nupkg
        asset_content_type: application/zip
